name: Java CI/CD Pipeline

# Trigger the workflow on push or pull request
on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

jobs:
  build:
    runs-on: ubuntu-latest  # This specifies that the pipeline will run on an Ubuntu runner

    steps:
      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Java environment (ensure JDK is available)
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'  # Specify the JDK version
          distribution: 'temurin'  # Correct distribution name for JDK 17

      # Step 3: Cache Maven dependencies (speed up subsequent builds)
      - name: Cache Maven dependencies
        uses: actions/cache@v3  # Updated version to v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 4: Run Maven build (tests and packaging)
      - name: Build with Maven
        run: mvn clean install -DskipTests=true

      # Step 5: Run tests (optional, you can skip this if you don't want tests in the pipeline)
      - name: Run tests with Maven
        run: mvn test

      - name: SonarCloud Scan
        uses: actions/checkout@v3
        with:
          projectKey: oussamaHJM_french-naturalization-app
          organization: oussamahjm
          sonar-token: ${{ secrets.SONAR_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # Step 6: Deploy your app (optional)
      # This step will only run for the 'master' branch
      - name: Deploy to production (example)
        if: github.ref == 'refs/heads/master'
        run: |
          echo "Deploying to production..."
          # Example: Deploy the app to a server or cloud platform here.
